The following issues have been reported with this version of PDL:

- CPAN Testers failures for various BSD operating systems:
  t/slice.t crashes after 17 subtests (openbsd, 5.7, amd64),
  t/pthread.t fails (netbsd, 6.1.5, multi-64int),
  t/inlinepdlpp.t fail (netbsd, 6.1.5, multi-64int),
  t/pnm.t fails all subtests (netbsd, 6.1.5, i386-netbsd),
  t/pdl_from_string.t (freebsd, 10.1, long double perl):

  #   Failed test 'q[e] returns exp(1)'
  #   at t/pdl_from_string.t line 301.
  #          got: '2.71828182845904509'
  #     expected: '2.71828182845904553'
  # Got 2.71828182845904509

  #   Failed test 'q[E] returns exp(1)'
  #   at t/pdl_from_string.t line 304.
  #          got: '2.71828182845904509'
  #     expected: '2.71828182845904553'
  # Got 2.71828182845904509
  # Looks like you failed 2 tests of 113.


- For perls with long double or greater for NVTYPE, there
  is an unavoidable loss of precision in converting to/from
  the PDL_Double values.  This may effect the results of
  calculations.  A warning is output every "use PDL;"


- A bug in Netpbm from versions 10.56.00 through 10.61.2 may
  result in a an invalid conversion of RAST images to PNM
  format on some platforms, resulting in a failed picrgb test.
  
- Bugs in Netpbm versions earlier than 10.58.00 result in
  invalid 16bit PNG image IO and failing tests.

- A bug in the Nepbm interface code prevents reading or writing
  image files with whitespace in the filename.


- GLUT readline support in perldl with the -glut option not
  yet implemented for win32.  Work in progress.


- A change in perl-5.14 on how the 'x' operator works affects
  PDL's overload of that operator for matrix multiplication.
  This can affect code using parentheses to group.  An example
  that shows the problem is code like:

     f( ($pdl0 * $pdl1) x $pdl2 )

  which now gives an error.  The fix is to force the element-wise
  operation in parentheses to be treated in scalar context rather
  than list context.  E.g.,

    f( scalar($p0 * $p1) x $p2 );


- The current Ctrl-C logic in the PDL shells (pdl2 and perldl)
  doesn't work the same with the perl's new "safe signals".  A
  workaround to the problem is to set the PERL_SIGNALS environment
  variable to "unsafe".  See sf.net feature request #3308168
  for details and any future status.


- The Perl debugger for perls 5.10.1 through 5.14.x has a new
  "feature" leading to false fails for lvalue subroutines when
  run under the debugger.  If you need to debug such code with
  an affected perl version, the work around is to use an
  intermediate temporary variable assignment as in:

    $piddle->slice('0:10') .= 100;           # original slice code
    ($tmp = $piddle->slice('0:10')) .= 100;  # work around perl -d "feature"

  The problem is understood and it appears that the error has
  been replaced by a warning with perl-5.15.1 and is fixed in
  perl-5.16.0.  NOTE: the work-around is ugly but effective.


- Multiline q'' constructs are broken in the Devel::REPL versions
  1.003012 and 1.003013 so you'll need to use perldl or avoid
  splitting quoted strings across lines.  A fix is being investigated.


- The demo 3d and 3d2 windows do not close (can not be closed)
  after the demo finishes.  You need to exit the perldl shell
  to have the window close.


- When you close a TriD graphics window with the frame widget
  the whole process exits including the perldl shell.


- Extremely verbose but not particularly helpful text output from
  the configure-build-test process.


- Directory completion in the interactive PDL shells (perldl and pdl2)
  using Term::ReadLine::Perl adds a space after each directory expansion.
  To continue to complete, one must delete the space before typing <TAB>
  again.  The problem has been reported as a Term::ReadLine::Perl bug.


- The following SourceForge bugs are outstanding at time of the
  PDL-2.016_03 release:

  425   svd is broken for everything but 2x2 matrices
        - pending-fixed, please report any problems

  424   Calling PDL on a list of piddles fails to propogate bad values
        - pending-fixed, please report any problems

  423   wcols FORMAT option always incorrectly gives error
        - pending-fixed, please report any problems

  422   PDL misc. compiler warnings
        - pending-fixed, please report any problems

  421   PDL::IO::FITS can't handle 64-bit integers (longlong, indx)
        - pending-fixed , please report any problems

  420   PDL-2.016 fails to build on ASperl solaris 32bit or 64bit platforms
  419   t/#pdl_from_string.t fails on long double systems
  418   warp2d and fitwarp2d polynomial fitting doesn't work as expected
  413   PDL::Core::Dev::pdlpp_postamble() cannot handle .pd files in subdirectories
  412   16bit TIFF image IO not exact in PDL::IO::Pic
  411   relax reshape() constraints
  410   perl scalar NVs to float/#double types confusing
  409   PDL demos with PGPLOT display ignore $ENV{PGPLOT_DEV}
  405   PDL::Bad - adding locf() function
  397   PDL::FFT not 64bit integer safe
  393   Tests may fail if perl is compiled with -Duselongdouble
  392   Inline Pdlpp doesn't work in clean build tree
  391   Operators called in the form "explicit call with trailing 0" give syntax error
  384   pdldoc.db is getting invalid paths to files on cygwin
  382   plplot-5.11.0 comes with libplplot.a but missing libplplotd.a
  381   rpic/rim fail to read files with whitespace in the filename
  379   Passing qsort an extra argument causes a segfault
  364   type promotion in whistogram is based upon the index, not the weight
  354   filter demo list by actually available
  339   PDL::Complex support is inconsistent and incomplete
  334   Test coverage is incomplete
  330   NiceSlice can get confused by comments to cause compilation errors
  324   PDL re-install wipes out non-core docs
  322   PDL::Demos system needs overhaul
  308   propagate badflag with .=
  274   'help funname' fails to show multiple function names
  254   online docs don't link to functions in other PDL modules
  238   NiceSlice affects code where it should not
  210   default PDL build output too long
  147   closing TriD window kills perldl shell


For more information on these and other PDL issues, and for
submissions of patches (bug patches are always welcome!),
see the PDL mailing lists. Links to archive list discussions
and how to register for the mailing lists can be found at
http://pdl.perl.org/?page=mailing-lists .

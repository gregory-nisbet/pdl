The following issues have been reported with this version of PDL:

- For perls with long double or greater for NVTYPE, there
  is an unavoidable loss of precision in converting to/from
  the PDL_Double values.  This may effect the results of
  calculations.  A warning is output every "use PDL;"


- A bug in the perl Nepbm interface code prevents reading or writing
  image files with whitespace in the filename.


- GLUT readline support in perldl with the -glut option not
  yet implemented for win32.  Work in progress.


- A change in perl-5.14 on how the 'x' operator works affects
  PDL's overload of that operator for matrix multiplication.
  This can affect code using parentheses to group.  An example
  that shows the problem is code like:

     f( ($pdl0 * $pdl1) x $pdl2 )

  which now gives an error.  The fix is to force the element-wise
  operation in parentheses to be treated in scalar context rather
  than list context.  E.g.,

    f( scalar($p0 * $p1) x $p2 );


- The current Ctrl-C logic in the PDL shells (pdl2 and perldl)
  doesn't work the same with the perl's new "safe signals".  A
  workaround to the problem is to set the PERL_SIGNALS environment
  variable to "unsafe".  See sf.net feature request #3308168
  for details and any future status.


- The Perl debugger for perls 5.10.1 through 5.14.x has a 
  "feature" leading to false fails for lvalue subroutines when
  run under the debugger.  If you need to debug such code with
  an affected perl version, the work around is to use an
  intermediate temporary variable assignment as in:

    $piddle->slice('0:10') .= 100;           # original slice code
    ($tmp = $piddle->slice('0:10')) .= 100;  # work around perl -d "feature"


- Multiline q'' constructs are broken in the Devel::REPL versions
  1.003012 and 1.003013 so you'll need to use perldl or avoid
  splitting quoted strings across lines.  A fix is being investigated.


- The demo 3d and 3d2 windows do not close (can not be closed)
  after the demo finishes.  You need to exit the perldl shell
  to have the window close.


- When you close a TriD graphics window with the frame widget
  the whole process exits including the perldl shell.


- Extremely verbose but not particularly helpful text output from
  the configure-build-test process.


- Directory completion in the interactive PDL shells (perldl and pdl2)
  using Term::ReadLine::Perl adds a space after each directory expansion.
  To continue to complete, one must delete the space before typing <TAB>
  again.  The problem has been reported as a Term::ReadLine::Perl bug.


- The following bugs are outstanding at time of the PDL-2.018_02 release
  where GH# and SF# correspond to the github issue number and sourceforge
  bug number respectively:

  GH#230 SF#444 Fails to build with Proj 5.0.0
  GH#229 SF#443 Slicing using an empty index vector fails
  GH#228 SF#442 Perl's experimental bitwise feature breaks PDL's & overloading
  GH#227 SF#441 Tests fail with uselongdouble perls in PDLA (works in PDL-2.x master)
  GH#226 SF#440 Strawberry Perl >=5.26.0 no longer supplies make
  GH#225 SF#439 Output type of 'cat' based on first element of input
  GH#224 SF#438 The documentation of PDL::Lite is not in line with the implementation w.r.t. exports
  GH#223 SF#437 pdlpp_postamble is not MS Windows compatible
  GH#222 SF#436 pdldoc dims shows only PDL::IO::HDF5::Dataset and not PDL::Core dims
  GH#221 SF#435 PDL-LinearAlgebra-0.12 undefined reference to dggsvd_ + sggsvd_
  GH#220 SF#420 PDL-2.016 fails to build on ASperl solaris 32bit or 64bit platforms
  GH#219 SF#418 warp2d and fitwarp2d polynomial fitting doesn't work as expected
  GH#218 SF#412 16bit TIFF image IO not exact in PDL::IO::Pic
  GH#217 SF#411 relax reshape() constraints
  GH#216 SF#410 perl scalar NVs to float/double types confusing
  GH#215 SF#405 PDL::Bad - adding locf() function
  GH#212        PDL::IO::Misc: Undefined subroutine &PDL::Ops::assgn called
  GH#200        Transform.pd alignment issues
  GH#175        PDL module which enables extra sanity checks low-hanging-fruit
  GH#150        documentation: remove use of $a, $b in example code cat:cleanup cat:doc
  GH#147 SF#397 PDL::FFT not 64bit integer safe (and more)
  GH#139        make Makefile.PL consumable to linux vendors cat:build cat:cleanup
  GH#127        Make sure all uses of approx() in the tests have the tolerance argument cat:cleanup cat:testing
  GH#126 SF#392 Inline Pdlpp doesn't work in clean build tree
  GH#125 SF#391 Operators called in the form "explicit call with trailing 0" give syntax error
  
         SF#387 PDL::IO::HDF5 wrong API function, H5Eset_auto1 has been called
         SF#384 pdldoc.db is getting invalid paths to files on cygwin
         SF#382 plplot-5.11.0 comes with libplplot.a but missing libplplotd.a
         SF#381 rpic/#rim fail to read files with whitespace in the filename
         SF#364 type promotion in whistogram is based upon the index, not the weight
         SF#354 filter demo list by actually available
         SF#339 PDL::Complex support is inconsistent and incomplete
         SF#334 Test coverage is incomplete
         SF#330 NiceSlice can get confused by comments to cause compilation errors
         SF#324 PDL re-install wipes out non-core docs
         SF#322 PDL::Demos system needs overhaul
         SF#308 propagate badflag with .=
         SF#274 'help funname' fails to show multiple function names
         SF#254 online docs don't link to functions in other PDL modules
         SF#238 NiceSlice affects code where it should not
         SF#210 default PDL build output too long
         SF#147 closing TriD window kills perldl shell



For more information on these and other PDL issues, and for
submissions of patches (bug patches are always welcome!),
see the PDL mailing lists. Links to archive list discussions
and how to register for the mailing lists can be found at
http://pdl.perl.org/?page=mailing-lists .
